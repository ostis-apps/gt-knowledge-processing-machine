sc_statement -> sc_statement_graph_tree;;
sc_statement_graph_tree
=> nrel_main_idtf:
	[Утв.(Граф-дерево)] (* <- lang_ru;; *);
=> nrel_main_idtf:
	[Statment.(Graph-tree)] (* <- lang_en;; *);

-> rrel_key_sc_element: concept_graph; concept_acyclic_graph; concept_connected_graph; concept_tree;
-> rrel_solver_key_sc_element: concept_tree; concept_acyclic_graph; concept_connected_graph;

-> rrel_key_sc_element: 
        ... 
		(*
		<- sc_definition;;
		=> nrel_main_idtf: [Определение: Граф-дерево] (* <- lang_ru;; *);;
		=> nrel_main_idtf: [Definition: Graph-tree] (* <- lang_en;; *);;
		<= nrel_sc_text_translation: ...
			(*
			-> rrel_example: 
				[Граф-дерево - это ацикличный связанный граф](*<- lang_ru;;*);;
			-> rrel_example: 
				[Graph-tree is acyclic and connected graph](*<- lang_en;;*);;
		*);;
*);;
sc_statement_graph_tree = [*
-> rrel_main_key_sc_element: ..sc_statement_graph_tree_equivalence
	(*
		<- nrel_equivalence;;
		-> sc_statement_graph_tree_equivalence_element_with_three_memberships;;
		-> sc_statement_graph_tree_equivalence_element_with_tree;;
	*);;
	
sc_statement_graph_tree_equivalence_element_with_three_memberships = [*
	concept_graph _-> _graph;;
	concept_acyclic_graph _-> _graph;;
	concept_connected_graph _-> _graph;;
*];;

sc_statement_graph_tree_equivalence_element_with_tree
= [*
	concept_tree _-> _graph;;
*];;
*];;
