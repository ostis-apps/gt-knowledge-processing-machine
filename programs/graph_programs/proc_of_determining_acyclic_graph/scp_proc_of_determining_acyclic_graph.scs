proc_of_determining_acyclic_graph
=> nrel_main_idtf:
	[Программа проверки графа на ацикличность] (* <- lang_ru;; *);
		
=> nrel_initiation_condition_and_result: (..scp_proc_of_determining_acyclic_graph_initiation_condition
					  => ..scp_proc_of_determining_acyclic_graph_result);
					  
-> rrel_key_sc_element: 
concept_graph;
concept_acyclic_graph;

-> rrel_solver_key_sc_element:
concept_acyclic_graph;

<- rrel_key_sc_element:
	..scp_proc_of_determining_acyclic_graph_behavior
	(*
		<- sc_description_of_scp_program_behavior;;
		<= nrel_sc_text_translation:
		...
		(*
			-> rrel_example:
				[Эта программа проверяет исходный граф на ацикличность. В случае ацикличности графа генерируется 					позитивная дуга принадлежности от абсолютного понятия "concept_acyclic_graph" к сущности "_graph", 
				иначе создаётся негативная дуга.];;
		*);;
	*);;


..scp_proc_of_determining_acyclic_graph_initiation_condition = [*
	concept_graph _-> _graph;;
*];;

..scp_proc_of_determining_acyclic_graph_result
= [*
	concept_acyclic_graph _-> _graph;;
*];;

